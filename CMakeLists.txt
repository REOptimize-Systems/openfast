#
# Copyright 2016 National Renewable Energy Laboratory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cmake_minimum_required(VERSION 2.8.12)
project(OpenFAST CXX C Fortran)

include(${CMAKE_SOURCE_DIR}/cmake/OpenfastCmakeUtils.cmake)
include(${CMAKE_SOURCE_DIR}/cmake/OpenfastFortranOptions.cmake)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")

set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_SOURCE_DIR}/build/ftnmods)

# CMake Configuration variables
if (NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release" CACHE STRING
    "Choose the build type: Debug Release" FORCE)
endif (NOT CMAKE_BUILD_TYPE)

option(GENERATE_TYPES "Use the openfast-regsitry to autogenerate types modules" off)
option(BUILD_SHARED_LIBS "Enable building shared libraries" off)
option(DOUBLE_PRECISION "Treat REAL as double precision" on)
option(USE_DLL_INTERFACE "Enable runtime loading of dynamic libraries" on)
option(FPE_TRAP_ENABLED "Enable FPE trap in compiler options" off)
option(ORCA_DLL_LOAD "Enable OrcaFlex Library Load" on)
option(BUILD_OPENFAST_CPP_API "Enable building OpenFAST - C++ API" off)
option(BUILD_FASTFARM "Enable building FAST.Farm" off)
option(OPENMP "Enable OpenMP support" off)
if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  # Configure the default install path to openfast/install
  set(CMAKE_INSTALL_PREFIX "${CMAKE_SOURCE_DIR}/install" CACHE PATH "OpenFAST install directory" FORCE)
endif()
if(APPLE)
  option(CMAKE_MACOSX_RPATH "Use RPATH runtime linking" on)
endif()

# Precompiler/preprocessor flag configuration
# Do this before configuring modules so that the flags are included
option(BUILD_TESTING "Build the testing tree." OFF)
if(BUILD_TESTING)
  set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -DUNIT_TEST")
endif()
option(BUILD_OPENFAST_SIMULINK_API "Enable building OpenFAST for use with Simulink" off)
if(BUILD_OPENFAST_SIMULINK_API)
  set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -DCOMPILE_SIMULINK")
endif()

# Setup Fortran Compiler options based on architecture/compiler
set_fast_fortran()

if (USE_DLL_INTERFACE)
  add_definitions(-DUSE_DLL_INTERFACE)
endif (USE_DLL_INTERFACE)

if (FPE_TRAP_ENABLED)
  add_definitions(-DFPE_TRAP_ENABLED)
endif (FPE_TRAP_ENABLED)

# Setup dependencies
if (${CMAKE_Fortran_COMPILER_ID} MATCHES "^Intel")
  find_package(MKL)
endif()
if (MKL_FOUND)
  include_directories(${MKL_INCLUDE_DIRS})
  set(BLAS_LIBRARIES ${MKL_LIBRARIES})
  set(LAPACK_LIBRARIES ${MKL_LIBRARIES})
  set(CMAKE_Fortran_IMPLICIT_LINK_LIBRARIES "ifport;ifcore;imf;svml;m;ipgo;intlc;c;irc_s;dl;c")
else()
  find_package(BLAS REQUIRED)
  find_package(LAPACK REQUIRED)
endif()

# Set the RPATH after configuring the install prefix
include(${CMAKE_SOURCE_DIR}/cmake/set_rpath.cmake)

########################################################################
# Build rules for OpenFAST Registry
#
if(GENERATE_TYPES)
  add_subdirectory(modules/openfast-registry)
endif()

########################################################################
# OpenFAST modules
#
set(OPENFAST_MODULES
  nwtc-library
  inflowwind
  aerodyn
  aerodyn14
  servodyn
  elastodyn
  beamdyn
  subdyn
  hydrodyn
  orcaflex-interface
  extptfm
  openfoam
  supercontroller
  turbsim
  openfast-library
  version
  feamooring
  moordyn
  icedyn
  icefloe
  map
  wakedynamics
  awae
)

set(OPENFAST_REGISTRY_INCLUDES "" CACHE INTERNAL "Registry includes paths")
set_registry_includes("modules" ${OPENFAST_MODULES})
# Fix non-standard path addition to OPENFAST_REGISTRY_INCLUDES in icefloe module
set(OPENFAST_REGISTRY_INCLUDES
  ${OPENFAST_REGISTRY_INCLUDES} -I ${CMAKE_SOURCE_DIR}/modules/icefloe/src/interfaces/FAST/
  CACHE INTERNAL "Registry includes paths")

foreach(IDIR IN ITEMS ${OPENFAST_MODULES})
  add_subdirectory("${CMAKE_SOURCE_DIR}/modules/${IDIR}")
endforeach(IDIR IN ITEMS ${OPENFAST_MODULES})

add_subdirectory(glue-codes)

#add_library(openfastlib STATIC
#  ${CMAKE_SOURCE_DIR}/modules/openfast-library/src/FAST_Library.f90
#  $<TARGET_OBJECTS:openfast_prelib_obj>
#  $<TARGET_OBJECTS:maplib_obj>
#  $<TARGET_OBJECTS:nwtclibs_obj>
#  $<TARGET_OBJECTS:ifwlib_obj>
#  $<TARGET_OBJECTS:aerodynlib_obj>
#  $<TARGET_OBJECTS:aerodyn14lib_obj>
#  $<TARGET_OBJECTS:servodynlib_obj>
#  $<TARGET_OBJECTS:elastodynlib_obj>
#  $<TARGET_OBJECTS:beamdynlib_obj>
#  $<TARGET_OBJECTS:subdynlib_obj>
#  $<TARGET_OBJECTS:hydrodynlib_obj>
#  $<TARGET_OBJECTS:orcaflexlib_obj>
#  $<TARGET_OBJECTS:extptfm_mckflib_obj>
#  $<TARGET_OBJECTS:openfoamtypeslib_obj>
#  $<TARGET_OBJECTS:foamfastlib_obj>
#  $<TARGET_OBJECTS:scdataextypeslib_obj>
#  $<TARGET_OBJECTS:feamlib_obj>
#  $<TARGET_OBJECTS:moordynlib_obj>
#  $<TARGET_OBJECTS:icedynlib_obj>
#  $<TARGET_OBJECTS:icefloelib_obj>
#  $<TARGET_OBJECTS:openfast_postlib_obj>
#  $<TARGET_OBJECTS:versioninfolib_obj>
#)
#

#add_library(openfastlib STATIC
#  ${CMAKE_SOURCE_DIR}/modules/openfast-library/src/FAST_Library.f90
#  $<TARGET_OBJECTS:openfast_prelib_obj>
#  $<TARGET_OBJECTS:maplib_obj>
#  $<TARGET_OBJECTS:nwtclibs_obj>
#  $<TARGET_OBJECTS:ifwlib_obj>
#  $<TARGET_OBJECTS:aerodynlib_obj>
#  $<TARGET_OBJECTS:aerodyn14lib_obj>
#  $<TARGET_OBJECTS:servodynlib_obj>
#  $<TARGET_OBJECTS:elastodynlib_obj>
#  $<TARGET_OBJECTS:beamdynlib_obj>
#  $<TARGET_OBJECTS:subdynlib_obj>
#  $<TARGET_OBJECTS:hydrodynlib_obj>
#  $<TARGET_OBJECTS:orcaflexlib_obj>
#  $<TARGET_OBJECTS:extptfm_mckflib_obj>
#  $<TARGET_OBJECTS:openfoamtypeslib_obj>
#  $<TARGET_OBJECTS:foamfastlib_obj>
#  $<TARGET_OBJECTS:scdataextypeslib_obj>
#  $<TARGET_OBJECTS:feamlib_obj>
#  $<TARGET_OBJECTS:moordynlib_obj>
#  $<TARGET_OBJECTS:icedynlib_obj>
#  $<TARGET_OBJECTS:icefloelib_obj>
#  $<TARGET_OBJECTS:openfast_postlib_obj>
#  $<TARGET_OBJECTS:versioninfolib_obj>
#)

add_library(openfastlib STATIC
  ${CMAKE_SOURCE_DIR}/modules/openfast-library/src/FAST_Library.f90
  $<TARGET_OBJECTS:openfast_prelib_obj>
  $<TARGET_OBJECTS:maplib_obj>
  $<TARGET_OBJECTS:nwtclibs_obj>
  $<TARGET_OBJECTS:ifwlib_obj>
  $<TARGET_OBJECTS:aerodynlib_obj>
  $<TARGET_OBJECTS:aerodyn14lib_obj>
  $<TARGET_OBJECTS:servodynlib_obj>
  $<TARGET_OBJECTS:elastodynlib_obj>
  $<TARGET_OBJECTS:beamdynlib_obj>
  $<TARGET_OBJECTS:subdynlib_obj>
  $<TARGET_OBJECTS:hydrodynlib_obj>
  $<TARGET_OBJECTS:orcaflexlib_obj>
  $<TARGET_OBJECTS:extptfm_mckflib_obj>
  $<TARGET_OBJECTS:openfoamtypeslib_obj>
  $<TARGET_OBJECTS:foamfastlib_obj>
  $<TARGET_OBJECTS:scdataextypeslib_obj>
  $<TARGET_OBJECTS:scdataexlib_obj>
  $<TARGET_OBJECTS:feamlib_obj>
  $<TARGET_OBJECTS:moordynlib_obj>
  $<TARGET_OBJECTS:icedynlib_obj>
  $<TARGET_OBJECTS:icefloelib_obj>
  $<TARGET_OBJECTS:openfast_postlib_obj>
  $<TARGET_OBJECTS:versioninfolib_obj>
)


#add_library(openfastlib STATIC
#  $<TARGET_OBJECTS:openfast_prelib_obj>
#  $<TARGET_OBJECTS:elastodynlib_obj>
#  #$<JOIN:${CMAKE_SOURCE_DIR}/modules/openfast-library/,$<TARGET_PROPERTY:openfast_prelib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/map/,$<TARGET_PROPERTY:maplib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/nwtc-library/,$<TARGET_PROPERTY:nwtclibs_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/inflowwind/,$<TARGET_PROPERTY:ifwlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/aerodyn/,$<TARGET_PROPERTY:aerodynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/aerodyn14/,$<TARGET_PROPERTY:aerodyn14lib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/servodyn/,$<TARGET_PROPERTY:servodynlib_obj,SOURCES>>
#  #$<JOIN:${CMAKE_SOURCE_DIR}/modules/elastodyn/,$<TARGET_PROPERTY:elastodynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/beamdyn/,$<TARGET_PROPERTY:beamdynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/subdyn/,$<TARGET_PROPERTY:subdynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/hydrodyn/,$<TARGET_PROPERTY:hydrodynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/orcaflex-interface/,$<TARGET_PROPERTY:orcaflexlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/extptfm/,$<TARGET_PROPERTY:extptfm_mckflib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/openfoam/,$<TARGET_PROPERTY:openfoamtypeslib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/openfoam/,$<TARGET_PROPERTY:foamfastlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/supercontroller/,$<TARGET_PROPERTY:scdataextypeslib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/feamooring/,$<TARGET_PROPERTY:feamlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/moordyn/,$<TARGET_PROPERTY:moordynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/icedyn/,$<TARGET_PROPERTY:icedynlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/icefloe/,$<TARGET_PROPERTY:icefloelib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/openfast-library/,$<TARGET_PROPERTY:openfast_postlib_obj,SOURCES>>
#  $<JOIN:${CMAKE_SOURCE_DIR}/modules/version/,$<TARGET_PROPERTY:versioninfolib_obj,SOURCES>>
#  ${CMAKE_SOURCE_DIR}/modules/openfast-library/src/FAST_Library.f90
#)
#
#target_include_directories(openfastlib PUBLIC 
#  $<TARGET_PROPERTY:versioninfolib_obj,Fortran_MODULE_DIRECTORY>
#  $<TARGET_PROPERTY:nwtclibs_obj,Fortran_MODULE_DIRECTORY>
#  $<TARGET_PROPERTY:maplib_obj,Fortran_MODULE_DIRECTORY>
#)

#include_directories(openfastlib ${CMAKE_SOURCE_DIR}/build/ftnmods)

#target_include_directories(openfastlib PUBLIC "/usr/local/rad_v2.0.0/include")

target_link_libraries(openfastlib 
  versioninfolib_obj
  openfast_prelib_obj
  maplib_obj
  nwtclibs_obj
  ifwlib_obj
  aerodynlib_obj
  aerodyn14lib_obj
  servodynlib_obj
  elastodynlib_obj
  beamdynlib_obj
  subdynlib_obj
  hydrodynlib_obj
  orcaflexlib_obj
  extptfm_mckflib_obj
  openfoamtypeslib_obj
  foamfastlib_obj
  scdataextypeslib_obj
  scdataexlib_obj
  feamlib_obj
  moordynlib_obj
  icedynlib_obj
  icefloelib_obj
  openfast_postlib_obj
  versioninfolib_obj
  ${LAPACK_LIBRARIES} 
  ${CMAKE_DL_LIBS}
)

if(BUILD_OPENFAST_SIMULINK_API)
  find_package(Matlab REQUIRED)
  target_link_libraries(openfastlib ${Matlab_MEX_LIBRARY})
endif()


###############################


# Install fortran .mod files also to installation directory
install(CODE
  "EXECUTE_PROCESS (COMMAND \"${CMAKE_COMMAND}\" -E copy_directory \"${CMAKE_Fortran_MODULE_DIRECTORY}\" \"${CMAKE_INSTALL_PREFIX}/include/openfast/\")")

# Install the library dependency information
install(EXPORT OpenFASTLibraries
  DESTINATION lib/cmake/OpenFAST
  FILE OpenFASTLibraries.cmake)

# Create OpenFAST config so that other codes can find OpenFAST
include(CMakePackageConfigHelpers)

set(INCLUDE_INSTALL_DIR include/)
set(LIB_INSTALL_DIR lib/)
set(FTNMOD_INSTALL_DIR include/openfast/)
if (BUILD_OPENFAST_CPP_API)
  set(OpenFAST_HAS_CXX_API TRUE)
else()
  set(OpenFAST_HAS_CXX_API FALSE)
endif()

configure_package_config_file(
  cmake/OpenFASTConfig.cmake.in
  ${CMAKE_CURRENT_BINARY_DIR}/OpenFASTConfig.cmake
  INSTALL_DESTINATION lib/cmake/OpenFAST
  PATH_VARS INCLUDE_INSTALL_DIR LIB_INSTALL_DIR FTNMOD_INSTALL_DIR)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/OpenFASTConfig.cmake
  DESTINATION lib/cmake/OpenFAST)

########################################################################

# Option configuration
if(BUILD_TESTING)
  include(CTest)

  # regression tests
  add_subdirectory(reg_tests)

  # unit tests
  add_subdirectory(unit_tests)
endif()

option(BUILD_DOCUMENTATION "Build documentation." OFF)
if(BUILD_DOCUMENTATION)
  add_subdirectory(docs)
endif()




###############


#install(TARGETS openfastlib
#  EXPORT ${CMAKE_PROJECT_NAME}Libraries
#  RUNTIME DESTINATION lib
#  ARCHIVE DESTINATION lib
#  LIBRARY DESTINATION lib)

